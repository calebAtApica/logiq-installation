logiq-flash:
  replicaCount: 1
  replicaCountMl: 1
  replicaCountSync: 1
  service:
    type: NodePort
  image:
    tag: 2.1.16
    pullPolicy: IfNotPresent
  persistence:
    enabled: true
    size: 100Gi
    ml_size: 20Gi
  metrics:
    serviceMonitor:
      enabled: true
    selector:
      release: prometheus
  resources:
    ingest:
      limits:
        cpu: "1250m"
      requests:
        cpu: "1250m"
        memory: "2750Mi"
    ml:
      limits:
        cpu: "1000m"
      requests:
        cpu: "500m"
    sync:
      requests:
        cpu: "100m"

flash-discovery:
  fullnameOverride: flash-discovery
  image:
    tag: 2.0.1
    pullPolicy: IfNotPresent
  replicaCountDiscovery: 2
  persistence:
    enabled: true
    size: 2Gi

redis:
  enabled: true
  fullnameOverride: redis
  usePassword: false
  cluster:
    slaveCount: 0
  master:
    disableCommands: []
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - redis
            topologyKey: "kubernetes.io/hostname"
    persistence:
      enabled: false
  slave:
    disableCommands: []
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - redis
            topologyKey: "kubernetes.io/hostname"
    persistence:
      enabled: false
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    selector:
      release: prometheus
  podSecurityPolicy:
    create: true
    rbac:
      create: true
      role:
        rules:
          - apiGroups:
              - policy
            resources:
              - podsecuritypolicies
            verbs:
              - use
            resourceNames:
              - redis
  securityContext:
    enable: true
    fsGroup: 1001
    runAsUser: 1001
  serviceAccount:
    create: true
    name: redis

postgres:
  enabled: false
  fullnameOverride: postgres
  postgresqlPostgresPassword: postgres
  postgresqlUsername: postgres
  postgresqlDatabase: postgres
  postgresqlPassword: postgres
  postgresqlExtendedConf:
    maxConnections: "400"
    sharedBuffers: "1024MB"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    additionalLabels:
      release: prometheus
  persistence:
    size: 20Gi
  resources:
    requests:
      memory: "4Gi"
      cpu: "1000m"
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  serviceAccount:
    enabled: true
    name: postgres

flash-coffee:
  service:
    type: ClusterIP
  coffee:
    replicaCount: 1
    image:
      tag: brew.2.1.17.21
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "4Gi"
        cpu: "1000m"
      limits:
        cpu: "1000m"
  coffee_worker:
    replicaCount: 1
    image:
      tag: brew.2.1.17.21
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "1Gi"
        cpu: "1000m"
      limits:
        cpu: "1000m"

s3gateway:
  s3gateway:
    enabled: false
  mode: distributed
  image:
    repository: minio/minio
    tag: RELEASE.2020-09-17T04-49-20Z
  defaultBucket:
    enabled: true
  fullnameOverride: s3-gateway
  accessKey: logiq_access
  secretKey: logiq_secret
  metrics:
    serviceMonitor:
      enabled: false
  buckets:
    - name: logiq
      policy: none
      purge: false
  persistence:
    enabled: true
    size: 25Gi
  securityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
  serviceAccount:
    create: true
    name: s3-gateway

ingress:
  enabled: true
  name: logiq-ingress
  tlsEnabled: false
  tlsSecretName: null

kubernetes-ingress:
  controller:
    replicaCount: 1
    ingressClass: logiq-ingress
    service:
      type: LoadBalancer
    defaultTLSSecret:
      enabled: false
      secret: null
  defaultBackend:
    replicaCount: 2
  podSecurityPolicy:
    enabled: true
  serviceAccount:
    create: true
    name: ingress-nginx

prometheus-operator:
  fullnameOverride: prometheus
  persistence:
    enabled: true
    size: 20Gi
  alertmanager:
    replicaCount: 1
  prometheus:
    replicaCount: 1
  operator:
    replicaCount: 1
  kube-state-metrics:
    replicaCount: 1
  node-exporter:
    replicaCount: 1

logiqctl:
  image:
    repository: logiqai/logiqctl
    tag: 2.0.4
    pullPolicy: IfNotPresent

global:
  domain: null
  kubeDistributor:
         enabled: false
  cloudProvider: aws
  enableMetricsServer: false
  sharedSecretName: logiq-shared-secret
  nodeSelectors:
    enabled: false 
    ingest: flash
    infra: infra
    other: coffee
    db: db
    cache: cache
    ingest_sync: sync
  taints:
    enabled: false
    ingest: flash
    infra: infra
    other: coffee
    db: db
    cache: cache
    ingest_sync: sync
  job:
    ttlSecondsAfterFinished: 100
  toolbox:
    image:
      repository: logiqai/toolbox
      tag: 2.0.1
  environment:
    logiq_flash_host: logiq-flash
    logiq_flash_port: 9999
    redis_opts: true
    redis_host: "redis-master"
    redis_port: "6379"
    postgres_host: "postgres"
    postgres_port: "5432"
    postgres_user: "postgres"
    postgres_password: "postgres"
    postgres_db: "postgres"
    postgres_coffee_db: "coffee"
    s3_url: "http://s3-gateway:9000"
    s3_access: "logiq_access"
    s3_secret: "logiq_secret"
    s3_bucket: "logiq"
    s3_region: "us-east-1"
    admin_name: "flash-admin@foo.com"
    admin_password: "flash-password"
    admin_org: "flash-org"
    admin_email: "flash-admin@foo.com"
    license: "license/license.jws"
    upload_dashboard: true
    cluster_id: LOGIQ
    awsServiceEndpoint: https://s3.us-east-1.amazonaws.com
  persistence:
    storageClass: standard
  chart:
    prometheus: true
    postgres: true
    redis: true
    s3gateway: true
    grafana: false
